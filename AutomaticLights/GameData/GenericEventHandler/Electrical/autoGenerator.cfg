PART
{
	name = RTGandAutoGenerator
	module = Part
	author = GenericEventHandler

	mesh = model.mu
	scale = 1
	rescaleFactor = 1

	node_stack_top = 0.0, 0.3268025, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_bottom = 0.0, -0.3268025, 0.0, 0.0, 1.0, 0.0, 0
	node_attach = 0.0, -0.3268025, 0.0, 0.0, -1.0, 0.0, 0

	TechRequired = advRocketry
	entryCost = 38200
	cost = 3300
	category = Utility
	subcategory = 0
	title = Generic Eventhandler's super power source:Liquid Fuel
	manufacturer =  GEH Electric
	description = Don't let Psycho Mechanic Industries tell you any different we came up with this idea, and it's more efficient.
	attachRules = 1,1,1,0,0

	// --- standard part parameters ---
	mass = 0.08
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 3000
	fuelCrossFeed = True
	
	MODULE 
	{
		name = AutoGeneratorModule
		low = 0.7
		high = 0.9
		watch = LiquidFuel
		power = ElectricCharge
	}
	
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 0.25
		}
	}
	
	MODULE
	{
			name = ModuleGenerator
			isAlwaysActive = False
			requiresAllInputs = True
			AutoShutdown = True
			// --- POWER RESERVE SAFETY ---
			resourceThreshold = .2
			// --- POWER RESERVE SAFETY ---
			Specialty = Engineer
			EfficiencyBonus = 1
			GeneratesHeat = true
		
			INPUT_RESOURCE
			{
				name = ElectricCharge
       	        rate = 10
			}

			OUTPUT_RESOURCE
			{
				name = Oxidizer
				rate = .044
			}
			
			OUTPUT_RESOURCE
			{
				name = LiquidFuel
				rate = .036
			}
	
			OUTPUT_RESOURCE
			{
				name = MonoPropellant
				rate = .001
			}
			
			OUTPUT_RESOURCE
			{
				name = Dust
				rate = 0.01
			}
			
			OUTPUT_RESOURCE
			{
				name = XenonGas
				rate = 0.01
			}
	}
	
	RESOURCE
	{
		name = LiquidFuel
		amount = 0
		maxAmount = 1
	}
	
	RESOURCE
	{
		name = Oxidizer
		amount = 0
		maxAmount = 1
	}
	RESOURCE
	{
		name = MonoPropellant
		amount = 0
		maxAmount = 1
	}

	RESOURCE
	{
		name = Dust
		amount = 0
		maxAmount = 1
	}
	
	RESOURCE
	{
		name = XenonGas
		amount = 0
		maxAmount = 1
	
	}
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 0
		maxAmount = 400
	}
	
	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 500					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.25		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.05		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 1000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 100					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}
}